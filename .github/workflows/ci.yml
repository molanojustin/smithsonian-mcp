name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  python-lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Sync Python dependencies
      run: |
        uv sync --dev

    - name: Run Python linting with ruff
      run: |
        uv run ruff check smithsonian_mcp/ --output-format=github
      continue-on-error: true

    - name: Run Python type checking with mypy
      run: |
        uv run mypy smithsonian_mcp/ --ignore-missing-imports
      continue-on-error: true

    - name: Run Python tests with pytest
      run: |
        uv run pytest tests/ -v --tb=short
      env:
        SMITHSONIAN_API_KEY: ${{ secrets.SMITHSONIAN_API_KEY }}

    - name: Check Python code formatting with black
      run: |
        uv run black --check smithsonian_mcp/ tests/
      continue-on-error: true

  node-validation:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Node.js dependencies
      run: npm ci

    - name: Validate Node.js code
      run: npm run test

    - name: Check Node.js package consistency
      run: npm run check-version

    - name: Lint Node.js code
      run: |
        if command -v eslint &> /dev/null; then
          npm run lint
        fi
      continue-on-error: true

  dependency-consistency:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Check dependency synchronization
      run: |
        uv sync
        uv run python -c "
        import subprocess
        import sys

        # Run the sync script to ensure requirements.txt is up-to-date
        result = subprocess.run(['node', 'scripts/sync-requirements.js'], capture_output=True, text=True)
        print(result.stdout)

        if result.returncode != 0:
            print(f'Error: {result.stderr}')
            sys.exit(1)
        "

  version-consistency:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check version consistency
      run: |
        # Check if package.json and pyproject.toml versions match
        npm run check-version

  test-results:
    if: always()
    needs: [python-lint-and-test, node-validation, dependency-consistency, version-consistency]
    runs-on: ubuntu-latest
    steps:
    - name: Test Results Summary
      run: |
        echo "### CI Pipeline Results" >> $GITHUB_STEP_SUMMARY
        echo "- Python Lint & Test: ${{ needs.python-lint-and-test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Node Validation: ${{ needs.node-validation.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Dependency Consistency: ${{ needs.dependency-consistency.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Version Consistency: ${{ needs.version-consistency.result }}" >> $GITHUB_STEP_SUMMARY